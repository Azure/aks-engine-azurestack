name: $(Year:yyyy).$(DayOfYear).$(Rev:r)_Ubuntu_$(UBUNTU_SKU)
trigger: none

variables:
  CONTAINER_IMAGE: 'mcr.microsoft.com/oss/azcu/go-dev:v1.36.2'

pool:
  vmImage: 'Ubuntu 20.04'

steps:
- displayName: Build Ubuntu VHD
  script: |
    docker run --rm \
    -v ${PWD}:/go/src/github.com/Azure/aks-engine-azurestack \
    -w /go/src/github.com/Azure/aks-engine-azurestack \
    -e CLIENT_ID=${CLIENT_ID} \
    -e CLIENT_SECRET="$(CLIENT_SECRET)" \
    -e TENANT_ID=${TENANT_ID} \
    -e AZURE_VM_SIZE=${AZURE_VM_SIZE} \
    -e PACKER_TEMP_GROUP=${PACKER_TEMP_GROUP} \
    -e AZURE_LOCATION=${AZURE_LOCATION} \
    -e FEATURE_FLAGS=${FEATURE_FLAGS} \
    -e GIT_VERSION=$(Build.SourceVersion) \
    -e BUILD_ID=$(Build.BuildId) \
    -e BUILD_NUMBER=$(Build.BuildNumber) \
    -e UBUNTU_SKU=${UBUNTU_SKU} \
    ${CONTAINER_IMAGE} make run-packer

- displayName: Create SIG Image Version
  script: |
    OS_DISK_URI="$(cat packer-output | grep "OSDiskUri:" | cut -d " " -f 2)" && \
    VHD_SA="/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${SA_GROUP}/providers/Microsoft.Storage/storageAccounts/${SA_NAME}" && \
    VHD_NAME="$(echo $OS_DISK_URI | cut -d "/" -f 8 | cut -d "?" -f 1)" && \
    VHD_VERSION="$(echo $(Build.BuildNumber) | cut -d '_' -f 1)" && \
    docker run --rm \
    -v ${PWD}:/go/src/github.com/Azure/aks-engine-azurestack \
    -w /go/src/github.com/Azure/aks-engine-azurestack \
    -e CLIENT_ID=${CLIENT_ID} \
    -e CLIENT_SECRET="$(CLIENT_SECRET)" \
    -e TENANT_ID=${TENANT_ID} \
    -e VHD_SA=${VHD_SA} \
    -e VHD_NAME=${VHD_NAME} \
    -e VHD_VERSION=${VHD_VERSION} \
    -e SA_CONTAINER_URL=${SA_CONTAINER_URL} \
    -e SIG_LOCATION=${SIG_LOCATION} \
    -e SIG_GROUP=${SIG_GROUP} \
    -e SIG_NAME=${SIG_NAME} \
    -e SIG_IMG_DEF=ubuntu-${UBUNTU_SKU} \
    ${CONTAINER_IMAGE} make sig-image-version
  condition: succeeded()

- displayName: Delete Packer Temp SA
  script: |
    PACKER_TEMP_SA="$(cat packer-output | grep "storage name:" | cut -d " " -f 3)" && \
    docker run --rm \
    -v ${PWD}:/go/src/github.com/Azure/aks-engine-azurestack \
    -w /go/src/github.com/Azure/aks-engine-azurestack \
    -e CLIENT_ID=${CLIENT_ID} \
    -e CLIENT_SECRET="$(CLIENT_SECRET)" \
    -e TENANT_ID=${TENANT_ID} \
    -e PACKER_TEMP_SA=${PACKER_TEMP_SA} \
    -e PACKER_TEMP_GROUP=${PACKER_TEMP_GROUP} \
    ${CONTAINER_IMAGE} make delete-sa
  condition: always()
