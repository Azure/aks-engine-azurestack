parameters:
  name: "" # defaults for any parameters that aren't specified
  k8sRelease: ""
  apimodel: "examples/e2e-tests/kubernetes/release/default/definition.json"
  createVNET: false
  cleanFail: true
  skipTest: false
  skipTests: ""
  regions: ""
  subscriptionId: ""
  tenantId: ""
  clientId: ""
  clientSecret: ""
  msiId: ""
  stabilityIterations: 0
  windowsVHDBuild: ""
  linuxVHDBuild: ""

jobs:
  - job: ${{ parameters.name }}
    dependsOn: unit_tests
    timeoutInMinutes: 150
    cancelTimeoutInMinutes: 5
    strategy:
      maxParallel: 0
    pool:
      vmImage: ubuntu-20.04
    container: dev1

    variables:
      GOBIN: "$(GOPATH)/bin" # Go binaries path
      GOROOT: "/usr/local/go" # Go installation path
      GOPATH: "$(Agent.TempDirectory)/go" # Go workspace path
      TIMEOUT: 30m
      CLUSTER_DEFINITION: ${{ parameters.apimodel }}
      ORCHESTRATOR_RELEASE: ${{ parameters.k8sRelease }}
      CREATE_VNET: ${{ parameters.createVNET }}
      CLEANUP_ON_EXIT: true
      CLEANUP_IF_FAIL: ${{ parameters.cleanFail }}
      SKIP_TEST: ${{ parameters.skipTest }}
      GINKGO_SKIP: ${{ parameters.skipTests }}
      RETAIN_SSH: false
      MSI_USER_ASSIGNED_ID: ${{ parameters.msiId }}
      ENABLE_KMS_ENCRYPTION: ${{ parameters.enableKMSEncryption }}
      CONTAINER_RUNTIME: ${{ parameters.containerRuntime }}
      BLOCK_SSH: ${{ parameters.runSSHTests }}
      DISTRO: ${{ parameters.distro }}
      WINDOWS_NODE_IMAGE_SUBSCRIPTION_ID: ${{ parameters.subscriptionId }}
      WINDOWS_NODE_IMAGE_RESOURCE_GROUP: AKSeImages
      WINDOWS_NODE_IMAGE_GALLERY: AKSeGallery
      WINDOWS_NODE_IMAGE_NAME: windows2019${{ parameters.containerRuntime }}
      WINDOWS_NODE_IMAGE_VERSION: ${{ parameters.windowsVHDBuild }}
      LINUX_NODE_IMAGE_SUBSCRIPTION_ID: ${{ parameters.subscriptionId }}
      LINUX_NODE_IMAGE_RESOURCE_GROUP: AKSeImages
      LINUX_NODE_IMAGE_GALLERY: AKSeGallery
      LINUX_NODE_IMAGE_NAME: ubuntu-20.04
      LINUX_NODE_IMAGE_VERSION: ${{ parameters.linuxVHDBuild }}

    steps:
      - template: e2e-step-template.yaml
        parameters:
          job: ${{ parameters.name }}
          regions: ${{ parameters.regions }}
          subscriptionId: ${{ parameters.subscriptionId }}
          tenantId: ${{ parameters.tenantId }}
          clientId: ${{ parameters.clientId }}
          clientSecret: '${{ parameters.clientSecret }}'
          stabilityIterations: ${{ parameters.stabilityIterations }}
