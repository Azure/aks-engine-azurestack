parameters:
  containerRuntime: ''
  windowsServerVersion: ''

jobs:
- job: build_vhd_windows_${{ parameters.windowsServerVersion }}_${{ parameters.containerRuntime }}
  timeoutInMinutes: 210

  strategy:
    maxParallel: 0

  pool:
    vmImage: $(BUILD_POOL)

  steps:
  - displayName: Building Windows VHD
    script: |
      docker run --rm \
      -v ${PWD}:/go/src/github.com/Azure/aks-engine-azurestack \
      -w /go/src/github.com/Azure/aks-engine-azurestack \
      -e CLIENT_ID=${CLIENT_ID} \
      -e CLIENT_SECRET="$(CLIENT_SECRET)" \
      -e TENANT_ID=${TENANT_ID} \
      -e AZURE_RESOURCE_GROUP_NAME=${AZURE_RESOURCE_GROUP_NAME} \
      -e AZURE_LOCATION=${AZURE_LOCATION} \
      -e AZURE_VM_SIZE=${PACKER_VM_SIZE} \
      -e GIT_BRANCH=$(Build.SourceBranchName) \
      -e GIT_REPO=$(Build.Repository.Uri) \
      -e GIT_VERSION=$(Build.SourceVersion) \
      -e BUILD_ID=$(Build.BuildId) \
      -e BUILD_NUMBER=$(Build.BuildNumber) \
      -e CONTAINER_RUNTIME=${{ parameters.containerRuntime }} \
      -e WINDOWS_SERVER_VERSION=${{ parameters.windowsServerVersion }} \
      ${DEIS_GO_DEV_IMAGE} make run-packer-windows

  - displayName: Delete Packer Temp SA
    script: |
      SA_NAME="$(cat packer-output | grep "storage name:" | cut -d " " -f 3)" && \
      docker run --rm \
      -v ${PWD}:/go/src/github.com/Azure/aks-engine-azurestack \
      -w /go/src/github.com/Azure/aks-engine-azurestack \
      -e CLIENT_ID=${CLIENT_ID} \
      -e CLIENT_SECRET="$(CLIENT_SECRET)" \
      -e TENANT_ID=${TENANT_ID} \
      -e SA_NAME=${SA_NAME} \
      -e AZURE_RESOURCE_GROUP_NAME=${AZURE_RESOURCE_GROUP_NAME} \
      ${DEIS_GO_DEV_IMAGE} make delete-sa
    condition: always()
